<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Data change world!]]></title>
  <subtitle><![CDATA[Anything can be quantified!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://liuziquan.github.io/"/>
  <updated>2015-09-02T02:05:08.370Z</updated>
  <id>http://liuziquan.github.io/</id>
  
  <author>
    <name><![CDATA[liuziquan]]></name>
    <email><![CDATA[liuziquan@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hexo在github上构建免费的Web应用]]></title>
    <link href="http://liuziquan.github.io/2015/09/02/Hexo%E5%9C%A8github%E4%B8%8A%E6%9E%84%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84Web%E5%BA%94%E7%94%A8/"/>
    <id>http://liuziquan.github.io/2015/09/02/Hexo在github上构建免费的Web应用/</id>
    <published>2015-09-02T02:03:47.000Z</published>
    <updated>2015-09-02T02:05:08.370Z</updated>
    <content type="html"><![CDATA[<h1 id="Hexo在github上构建免费的Web应用">Hexo在github上构建免费的Web应用</h1><h2 id="前言">前言</h2><p>很多次想把博客从wordpress迁移到github，为此还特意学了一下Ruby和Jekyll。但由于迁移过程过于复杂，我又没有很多时间，这个计划就被搁置了。慢慢地文章积累越来越多了，更没有时间来整理了，所以就先用着wordpress吧。</p>
<p>不过，了迁移博客我也有一些新的发现。hexo,一个基于Node的博客框架，同样可以实现基于github的博客，而且更轻更快，更适合Node的开发程序员。</p>
<p>[toc]</p>
<h2 id="1-_Hexo介绍">1. Hexo介绍</h2><p>Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。</p>
<p>发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….</p>
<p>Hexo的官方网站：<a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io/</a> ，也是基于Github构建的网站。</p>
<h2 id="2-_Hexo安装">2. Hexo安装</h2><p>系统环境：</p>
<blockquote>
<p>   win7 64bit<br>    node v0.10.5<br>    npm 1.2.19</p>
</blockquote>
<p>Hexo安装，要用全局安装，加-g参数。</p>
<blockquote>
<p>D:> <strong>npm install -g hexo</strong></p>
</blockquote>
<p>查看hexo的版本</p>
<blockquote>
<p>D:> <strong>hexo version</strong><br>hexo: 2.5.5<br>os: Windows_NT 6.1.7601 win32 x64<br>http_parser: 1.0<br>node: 0.10.5<br>v8: 3.14.5.8<br>ares: 1.9.0-DEV<br>uv: 0.10.5<br>zlib: 1.2.3<br>modules: 11<br>openssl: 1.0.1e</p>
</blockquote>
<p>安装好后，我们就可以使用Hexo创建项目了。</p>
<blockquote>
<p>  D:\workspace\javascript&gt; <strong>hexo init nodejs-hexo</strong><br>    [info] Creating file: source/_posts/hello-world.md<br>    [info] Creating file: package.json<br>    [info] Creating file: .gitignore<br>    [info] Copying file: _config.yml<br>    [info] Copying file: scaffolds/draft.md<br>    [info] Copying file: scaffolds/page.md<br>    [info] Copying file: scaffolds/photo.md<br>    [info] Copying file: scaffolds/post.md<br>    [info] Creating folder: source/_drafts<br>    [info] Creating folder: scripts<br>    [info] Copying theme data…<br>    [info] Initialization has been done. Start blogging with Hexo!</p>
</blockquote>
<p>我们看到当前在目录下，出现了一个文件夹，包括初始化的文件。<br>进入目录，并启动Hexo服务器。</p>
<blockquote>
<p>#进入目录<br>D:\workspace\javascript&gt;cd nodejs-hexo</p>
<p>#启动hexo服务器<br>D:\workspace\nodejs-hexo&gt;hexo server<br>[info] Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>. Press Ctrl+C to stop.</p>
</blockquote>
<p>这时端口4000被打开了，我们能过浏览器打开地址，<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-web.png" alt="默认hexo"></p>
<p>出现了默认的网页界面，是不是很容易呢！！</p>
<h2 id="3-_Hexo的使用">3. Hexo的使用</h2><p>接下来，我们要对Hexo做更全面的了解，才能做出个性化一的博客。</p>
<h3 id="3-1_目录和文件">3.1 目录和文件</h3><p>先来看一下，默认生成了哪些东西。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-folder.png" alt="默认目录结构"></p>
<blockquote>
<p>  scaffolds 脚手架，也就是一个工具模板<br>    scripts 写文件的js，扩展hexo的功能<br>    source 存放博客正文内容<br>    source/_drafts 草稿箱<br>    source/_posts 文件箱<br>    themes 存放皮肤的目录<br>    themes/landscape 默认的皮肤<br>    _config.yml 全局的配置文件<br>    db.json 静态常量</p>
</blockquote>
<p>在这里，我们每次用到的就是_posts目录里的文件，而_config.yml文件和themes目录是第一次配置好就行了。</p>
<p>_posts目录：Hexo是一个静态博客框架，因此没有数据库。文章内容都是以文本文件方式进行存储的，直接存储在_posts的目录。Hexo天生集成了markdown，我们可以直接使用markdown语法格式写博客，例如:hello-world.md。新增加一篇文章，就在_posts目录，新建一个xxx.md的文件。</p>
<p>themes目录：是存放皮肤的，包括一套Javascript+CSS样式和基于EJS的模板设置。通过在themes目录下，新建一个子目录，就可以创建一套新的皮肤，当然我们也可以直接在landscape上面修改。</p>
<h3 id="3-2_全局配置">3.2 全局配置</h3><p>_config.yml是全局的配置文件：很多的网站配置都在这个文件中定义。</p>
<blockquote>
<p>   站点信息: 定义标题，作者，语言<br>    URL: URL访问路径<br>    文件目录: 正文的存储目录<br>    写博客配置：文章标题，文章类型，外部链接等<br>    目录和标签：默认分类，分类图，标签图<br>    归档设置：归档的类型<br>    服务器设置：IP，访问端口，日志输出<br>    时间和日期格式： 时间显示格式，日期显示格式<br>    分页设置：每页显示数量<br>    评论：外挂的Disqus评论系统<br>    插件和皮肤：换皮肤，安装插件<br>    Markdown语言：markdown的标准<br>    CSS的stylus格式：是否允许压缩<br>    部署配置：github发布</p>
</blockquote>
<p>查看文件：_config.yml</p>
<pre><code><span class="preprocessor"># Hexo Configuration</span>
<span class="preprocessor">## Docs: http://hexo.io/docs/configuration.html</span>
<span class="preprocessor">## Source: https://github.com/tommy351/hexo/</span>

<span class="preprocessor"># 站点信息</span>
title: Hexo博客
subtitle: 新的开始
description: blog.fens.me
author: bsspirit
email: bsspirit@gmail.com
language: zh-CN

<span class="preprocessor"># URL</span>
<span class="preprocessor">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>
url: http:<span class="comment">//blog.fens.me</span>
root: /
permalink: :year/:month/:day/:title/
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code

<span class="preprocessor"># 文件目录</span>
source_dir: source
public_dir: <span class="keyword">public</span>

<span class="preprocessor"># 写博客配置</span>
new_post_name: :title.md # File name of <span class="keyword">new</span> posts
default_layout: post
auto_spacing: <span class="literal">false</span> # Add spaces between asian characters and western characters
titlecase: <span class="literal">false</span> # Transform title into titlecase
external_link: <span class="literal">true</span> # Open external links in <span class="keyword">new</span> tab
max_open_file: <span class="number">100</span>
multi_thread: <span class="literal">true</span>
filename_case: <span class="number">0</span>
render_drafts: <span class="literal">false</span>
post_asset_folder: <span class="literal">false</span>
highlight:
  enable: <span class="literal">true</span>
  line_number: <span class="literal">true</span>
  tab_replace:

<span class="preprocessor"># 目录和标签</span>
default_category: uncategorized
category_map:
tag_map:

<span class="preprocessor"># 归档设置</span>
<span class="preprocessor">## 2: Enable pagination</span>
<span class="preprocessor">## 1: Disable pagination</span>
<span class="preprocessor">## 0: Fully Disable</span>
archive: <span class="number">2</span>
category: <span class="number">2</span>
tag: <span class="number">2</span>

<span class="preprocessor"># 服务器设置</span>
<span class="preprocessor">## Hexo uses Connect as a server</span>
<span class="preprocessor">## You can customize the logger format as defined in</span>
<span class="preprocessor">## http://www.senchalabs.org/connect/logger.html</span>
port: <span class="number">4000</span>
server_ip: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>
logger: <span class="literal">false</span>
logger_format:

<span class="preprocessor"># 时间和日期格式</span>
<span class="preprocessor">## Hexo uses Moment.js to parse and display date</span>
<span class="preprocessor">## You can customize the date format as defined in</span>
<span class="preprocessor">## http://momentjs.com/docs/#/displaying/format/</span>
date_format:<span class="constant"> MMM </span>D YYYY
time_format: H:mm:ss

<span class="preprocessor"># 分页设置</span>
<span class="preprocessor">## Set per_page to 0 to disable pagination</span>
per_page: <span class="number">10</span>
pagination_dir: page

<span class="preprocessor"># 评论</span>
disqus_shortname:

<span class="preprocessor"># 插件和皮肤</span>
<span class="preprocessor">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span>
<span class="preprocessor">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span>
theme: landscape
exclude_generator:

<span class="preprocessor"># Markdown语法</span>
<span class="preprocessor">## https://github.com/chjj/marked</span>
markdown:
  gfm: <span class="literal">true</span>
  pedantic: <span class="literal">false</span>
  sanitize: <span class="literal">false</span>
  tables: <span class="literal">true</span>
  breaks: <span class="literal">true</span>
  smartLists: <span class="literal">true</span>
  smartypants: <span class="literal">true</span>

<span class="preprocessor"># CSS的stylus格式</span>
stylus:
  compress: <span class="literal">false</span>

<span class="preprocessor"># 部署配置</span>
<span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span>
deploy:
  type:
</code></pre><h3 id="3-3_命令行使用">3.3 命令行使用</h3><p>查看命令行帮助</p>
<pre><code>D:\&gt; hexo help
Usage: hexo 

Commands:
  help      Get help <span class="command"><span class="keyword">on</span> <span class="title">a</span> <span class="title">command</span></span>
  init      Create <span class="operator">a</span> <span class="built_in">new</span> Hexo <span class="built_in">folder</span>
  migrate   Migrate your site <span class="built_in">from</span> other <span class="keyword">system</span> <span class="built_in">to</span> Hexo
  <span class="built_in">version</span>   Display <span class="built_in">version</span> information

Global Options:
  <span class="comment">--config   Specify config file instead of using _config.yml</span>
  <span class="comment">--debug    Display all verbose messages in the terminal</span>
  <span class="comment">--safe     Disable all plugins and scripts</span>
  <span class="comment">--silent   Hide output on console</span>

For more help, you can use `hexo help [<span class="command"><span class="keyword">command</span>]` <span class="title">for</span> <span class="title">the</span> <span class="title">detailed</span> <span class="title">information</span></span>
<span class="operator">or</span> you can check <span class="operator">the</span> docs: <span class="keyword">http</span>://hexo.io/docs/
</code></pre><p>命令行解释：</p>
<pre><code><span class="keyword">help</span> 查看帮助信息
init 创建一个hexo项目
migrate 从其他系统向hexo迁移
<span class="keyword">version</span> 查看hexo的版本
–config参数，指定配置文件，代替默认的_config.yml
–<span class="keyword">debug</span>参数，调试模式，输出所有日志信息
–safe参数，安全模式，禁用所有的插件和脚本
–<span class="keyword">silent</span>参数，无日志输出模式
</code></pre><h3 id="3-4_创建新文章">3.4 创建新文章</h3><p>接下来，我们开始新博客了，创建第一博客文章。Hexo建议通过命令行操作，当然你也可以直接在_posts目录下创建文件。</p>
<p>通过命令创建新文章</p>
<pre><code>D:<span class="command">\workspace</span><span class="command">\javascript</span><span class="command">\nodejs</span>-hexo&gt;hexo new 新的开始
<span class="special">[</span>info<span class="special">]</span> File created at D:<span class="command">\workspace</span><span class="command">\javascript</span><span class="command">\nodejs</span>-hexo<span class="command">\source</span><span class="command">\_</span>posts<span class="command">\新</span>的开始.md
</code></pre><p>在_posts目录下，就会生成文件：”新的开始.md”。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-post.png" alt="begin.md"></p>
<p>然后，我们编辑文件：”新的开始.md”，以markdown语法写文章，然后保存。</p>
<pre><code>title: 新的开始
date: 2014-05-07 18:44:12
tags:
<span class="bullet">- </span>开始
<span class="bullet">- </span>我
<span class="bullet">- </span>日记
<span class="header">categories: 日志
---</span>

这是*<span class="strong">*新的开始*</span><span class="strong">*，我用hexo创建了第一篇文章。

</span>通过下面的命令，就可以创建新文章
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\workspace\javascript\nodejs-hexo&#62;hexo new &#26032;&#30340;&#24320;&#22987;&#10;[info] File created at D:\workspace\javascript\nodejs-hexo\source\_posts\&#26032;&#30340;&#24320;&#22987;.md</span><br></pre></td></tr></table></figure>
</code></pre><p>感觉非常好。</p>
<p>在命令行，启动服务器。</p>
<pre><code><span class="string">D:</span>\workspace\javascript\nodejs-hexo&gt;hexo server
[info] Hexo is running at <span class="string">http:</span><span class="comment">//localhost:4000/. Press Ctrl+C to stop.</span>
</code></pre><p>通过浏览器打开， <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> ，就出现了我们新写的文章。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-index.png" alt="beginmd"></p>
<p>同时，网页的右侧还会出现Categories(目录)，Tags(标签)，Tag Cloud(标签云)的显示。</p>
<h3 id="3-5_文章的语法">3.5 文章的语法</h3><p>我们在写文章时，有一些语法的要求。<br>语法包括3部分：</p>
<pre><code>基本信息：标题，发布日期，分类目录，标签，类型，固定发布链接
正文：<span class="keyword">markdown语法和Swig语法(掌握一个就行)
</span>特殊标记：引用，链接，图片，代码块，iframe，youtube视频
</code></pre><h4 id="3-5-1_基本信息">3.5.1 基本信息</h4><p>必须在文件的顶部，—的行之前的部分。如：</p>
<pre><code>title: 新的开始
date: <span class="number">2014</span>-<span class="number">05</span>-<span class="number">07</span> <span class="number">18</span>:<span class="number">44</span>:<span class="number">12</span>
updated    : <span class="number">2014</span>-<span class="number">05</span>-<span class="number">10</span> <span class="number">18</span>:<span class="number">44</span>:<span class="number">12</span>
permalink: abc
tags:
- 开始
- 我
- 日记
categories:
- 日志
- 第一天

---
</code></pre><p>我们可以对刚才发的文章，做上面的修改，再看效果。</p>
<h4 id="3-5-2_正文">3.5.2 正文</h4><p>hexo的正文要求使用markdown的语法，这里就不在多说，请自行查看markdwon的文档。</p>
<h4 id="3-5-3_特殊标记">3.5.3 特殊标记</h4><p>hexo对于一些有特殊标记 文字块，做了特殊的定义。</p>
<p>引用</p>
<pre><code># Swig语法
<span class="comment"><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote></span>

# Markdown语法
&gt; Every interaction is both precious and an opportunity to delight.
</code></pre><p>代码块</p>
<pre><code># Swig语法
<span class="comment"><figure class="highlight cpp"><figcaption><span>.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="literal">false</span>, <span class="number">2</span>, ‘’, <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure></span>

# Markdown语法
<span class="comment"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.compact([0, 1, false, 2, &#8216;&#8217;, 3]);&#10;=&#62; [1, 2, 3]</span><br></pre></td></tr></table></figure></span>
</code></pre><p>链接</p>
<pre><code><span class="xml"><span class="comment"><a href="http://blog.fens.me" title="粉丝日志" target="_blank">粉丝日志</a></span></span>

<span class="header"># Markdown语法</span>
[<span class="link_label">粉丝日志</span>](<span class="link_url">http://blog.fens.me</span>)
</code></pre><p>图片，对于本地图片，需要在source目录下面新建一个目录images，然后把图片放到目录中。</p>
<pre><code><span class="header"># Swig语法</span>
<span class="xml"><span class="comment"><img src="/images/fens.me.png" width="400" height="600" title="这是一张图片"></span></span>

<span class="header"># Markdown语法</span>
![<span class="link_label">这是一张图片</span>](<span class="link_url">/images/fens.me.png</span>)
</code></pre><p>在浏览器中看到效果。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-content.png" alt="图片效果"></p>
<p>我们发现Swig的语法比markdown语法有更多的配置项，可以让页面更丰富，下面显示完整的基于Swig代码。</p>
<pre><code>title: 新的开始
date: 2014-05-07 18:44:12
permalink: abc
tags:
- 开始
- 我
- 日记
categories:
- 日志
- 第一天

---

这是**新的开始**，我用hexo创建了第一篇文章。

通过下面的命令，就可以创建新文章
<span class="comment"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\workspace\javascript\nodejs-hexo&#62;hexo new &#26032;&#30340;&#24320;&#22987;&#10;[info] File created at D:\workspace\javascript\nodejs-hexo\source\_posts\&#26032;&#30340;&#24320;&#22987;.md</span><br></pre></td></tr></table></figure></span>


感觉非常好。


## 引用
<span class="comment"><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote></span>

## 代码块
<span class="comment"><figure class="highlight cpp"><figcaption><span>.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="literal">false</span>, <span class="number">2</span>, ‘’, <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure></span>

## 链接
<span class="comment"><a href="http://blog.fens.me" title="粉丝日志" target="_blank">粉丝日志</a></span>

## 图片
<span class="comment"><img src="/images/fens.me.png" width="400" height="600" title="这是一张图片"></span>
</code></pre><h2 id="4-_发布到项目到github">4. 发布到项目到github</h2><h3 id="4-1_静态化处理">4.1 静态化处理</h3><p>写完了文章，我们就可以发布了。要说明的一点是hexo的静态博客框架，那什么是静态博客呢？静态博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。</p>
<p>静态化命令</p>
<pre><code>D:\workspace\javascript\nodejs-hexo&gt;hexo generate
[info] Files loaded <span class="keyword">in</span> <span class="number">0.895</span>s
[<span class="keyword">create</span>] <span class="keyword">Public</span>: js\script.js
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\fonts\fontawesome-webfont.svg
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\fonts\FontAwesome.otf
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\fonts\fontawesome-webfont.ttf
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\fonts\fontawesome-webfont.eot
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\fonts\fontawesome-webfont.woff
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\blank.gif
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\fancybox_loading@<span class="number">2</span>x.gif
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\fancybox_overlay.png
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\images\banner.jpg
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\fancybox_sprite.png
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\jquery.fancybox.css
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\fancybox_loading.gif
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\fancybox_sprite@<span class="number">2</span>x.png
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\jquery.fancybox.js
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\jquery.fancybox.pack.js
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\helpers\jquery.fancybox-buttons.js
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\helpers\fancybox_buttons.png
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\helpers\jquery.fancybox-buttons.css
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\helpers\jquery.fancybox-media.js
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\helpers\jquery.fancybox-thumbs.css
[<span class="keyword">create</span>] <span class="keyword">Public</span>: fancybox\helpers\jquery.fancybox-thumbs.js
[<span class="keyword">create</span>] <span class="keyword">Public</span>: archives\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: images\fens.me.png
[<span class="keyword">create</span>] <span class="keyword">Public</span>: archives\<span class="number">2014</span>\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: archives\<span class="number">2014</span>\<span class="number">05</span>\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: css\style.css
[<span class="keyword">create</span>] <span class="keyword">Public</span>: <span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: categories\日志\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: categories\日志\第一天\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: <span class="number">2014</span>\<span class="number">05</span>\<span class="number">07</span>\abc\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: <span class="number">2014</span>\<span class="number">05</span>\<span class="number">07</span>\hello-world\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: tags\开始\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: tags\我\<span class="keyword">index</span>.html
[<span class="keyword">create</span>] <span class="keyword">Public</span>: tags\日记\<span class="keyword">index</span>.html
[info] <span class="number">35</span> files generated <span class="keyword">in</span> <span class="number">0.711</span>s
</code></pre><p>在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。</p>
<h3 id="4-2_发布到github">4.2 发布到github</h3><p>接下来，我们把这个博客发布到github。<br>在github中创建一个项目nodejs-hexo，项目地址：<a href="https://github.com/bsspirit/nodejs-hexo" target="_blank" rel="external">https://github.com/bsspirit/nodejs-hexo</a></p>
<p>编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。</p>
<pre><code><span class="attribute">deploy</span>:
  <span class="attribute">type</span>: github
  <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:bsspirit/nodejs-hexo.git
</code></pre><p>然后，通过命令进行部署。</p>
<pre><code>D:\workspace\javascript\nodejs-hexo&gt;hexo deploy
<span class="comment">[info]</span> Start deploying: github
<span class="comment">[info]</span> Setting up GitHub deployment...
Initialized empty Git repository in D:/workspace/javascript/nodejs-hexo/.deploy/.git/
<span class="comment">[master (root-commit) 43873d3]</span> First commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 placeholder
<span class="comment">[info]</span> Clearing .deploy folder...
<span class="comment">[info]</span> Copying files from public folder...

// 省略部分输出

Branch gh-pages set up to track remote branch gh-pages from github.
To git@github.com:bsspirit/nodejs-hexo.git
 * <span class="comment">[new branch]</span>      gh-pages -&gt; gh-pages
<span class="comment">[info]</span> Deploy done: github
</code></pre><p>这个静态的web网站就被部署到了github，检查一下分支是gh-pages。gh-pages是github为了web项目特别设置的分支。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-github.png" alt="github"></p>
<p>然后，点击”Settings”，找到GitHub Pages，提示“Your site is published at <a href="http://bsspirit.github.io/nodejs-hexo”，打开网页" target="_blank" rel="external">http://bsspirit.github.io/nodejs-hexo”，打开网页</a> <a href="http://bsspirit.github.io/nodejs-hexo" target="_blank" rel="external">http://bsspirit.github.io/nodejs-hexo</a>，就是我们刚刚发布的站点。<br><img src="http://blog.fens.me/wp-content/uploads/2014/05/hexo-github-page.png" alt="newsite"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Hexo在github上构建免费的Web应用">Hexo在github上构建免费的Web应用</h1><h2 id="前言">前言</h2><p>很多次想把博客从wordpress迁移到github，为此还特意学了一下Ruby和Jekyll。但由于迁移过程过于复杂]]>
    </summary>
    
      <category term="Hexo github FreeWeb" scheme="http://liuziquan.github.io/Hadoop%20Oracle%20MySQL%20DB2/Hexo-github-FreeWeb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World 欢迎来到hexo世界]]></title>
    <link href="http://liuziquan.github.io/2015/09/01/hello-world/"/>
    <id>http://liuziquan.github.io/2015/09/01/hello-world/</id>
    <published>2015-09-01T08:08:41.704Z</published>
    <updated>2015-09-01T08:08:41.704Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
